#!/usr/bin/env bash
# Script to set up a basic web server environment with Nginx

# Colors
blue='\e[1;34m'
brown='\e[0;33m'
green='\e[1;32m'
reset='\033[0m'

# Function to display messages in blue color
blue_echo() {
    echo -e "${blue}$1${reset}"
}

# Function to display messages in brown color
brown_echo() {
    echo -e "${brown}$1${reset}"
}

# Function to display messages in green color
green_echo() {
    echo -e "${green}$1${reset}"
}

# Function to install packages
install_package() {
    local package_name="$1"
    blue_echo "Installing: ${brown}$package_name${reset}"
    sudo apt-get update -y -qq && \
    sudo apt-get install -y "$package_name" -qq
}

# Function to set up Nginx
setup_nginx() {
    if ! command -v nginx &>/dev/null; then
        install_package nginx
    else
        green_echo "Nginx is already installed."
    fi

    # Allowing Nginx through the firewall
    sudo ufw allow 'Nginx HTTP'

    # Set permissions for website files
    local www_dir="/var/www"
    if [ ! -d "$www_dir" ]; then
        sudo mkdir -p "$www_dir"
    fi
    sudo chown -R "$USER":"$USER" "$www_dir"
    sudo chmod -R 755 "$www_dir"

    # Create directories if not present
    for dir in "$www_dir"/{html,error}; do
        if [ ! -d "$dir" ]; then
            sudo mkdir -p "$dir"
        fi
    done

    # Create new index
    echo "Hello World!" | sudo tee "$www_dir"/html/index.html >/dev/null

    # Create new error page
    echo "Ceci n'est pas une page" | sudo tee "$www_dir"/html/error_404.html >/dev/null

    # Backup default server config file
    sudo cp /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/default.backup

    # Create and apply custom server configuration
    local server_config="\
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
    server_name _;
    add_header X-Served-By \$hostname;
    location / {
        try_files \$uri \$uri/ =404;
    }
    error_page 404 /error_404.html;
    location = /error_404.html {
        internal;
    }
}"
    echo "$server_config" | sudo tee /etc/nginx/sites-enabled/default >/dev/null

    # Restart Nginx service
    if sudo systemctl is-active --quiet nginx; then
        sudo systemctl restart nginx
    else
        sudo systemctl start nginx
    fi

    green_echo "Nginx setup completed."
}

# Main function
main() {
    blue_echo "Updating and doing some minor checks..."
    setup_nginx
}

# Run the main function
main
